version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    networks:
      - broker-kafka
    volumes:
      - zookeeper-data:/data
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/var/lib/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8099:8080"
    depends_on:
      - customer-service
      - integration-service
      - location-service
      - order-service
      - payment-service
      - product-service
      - promotion-service
      - report-service
      - support-service

  customer-service:
    build:
      context: ./services/customer-service
    ports:
      - "8081:8081"

  integration-service:
    build:
      context: ./services/integration-service
    ports:
      - "8082:8082"

  location-service:
    build:
      context: ./services/location-service
    ports:
      - "8083:8083"

  order-service:
    build:
      context: ./services/order-service
    ports:
      - "8084:8084"

  payment-service:
    build:
      context: ./services/payment-service
    ports:
      - "8085:8085"

  product-service:
    build:
      context: ./services/product-service
    ports:
      - "8086:8086"

  promotion-service:
    build:
      context: ./services/promotion-service
    ports:
      - "8087:8087"

  report-service:
    build:
      context: ./services/report-service
    ports:
      - "8088:8088"

  support-service:
    build:
      context: ./services/support-service
    ports:
      - "8089:8089"

networks:
  broker-kafka:
    driver: bridge

volumes:
  zookeeper-data:
  kafka-data:
